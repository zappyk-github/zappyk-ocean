#!/bin/env bash

THIS=$0
NAME=$(basename "$0")

EXEC=$1 ; shift
FILE=$1

CMD_ENCFS=$(which encfs)
CMD_UMOUNT=$(which umount)
CMD_FIND=$(which find)
CMD_RAR=$(which rar)

_error() { echo "${1//?/_}" ; echo "$1"; }
_print() { echo "$NAME: execute $1"; }
_write() {
    local file=$1
    printf "      _%s_ \n" "${file//?/_}"
    printf "FILE=| %s |\n" "${file}"
    printf "_____|_%s_|\n" "${file//?/_}"
    cat "$file" ; local rc=$?
    printf "_______%s__\n" "${file//?/_}"
    return $rc
}

PATH_COMMON="$HOME"
PATH_SOURCE="$PATH_COMMON/Dropbox/Private"
DIR_OFMOUNT="$PATH_COMMON/Dropbox-Private"
DIR_BACKUP_="$DIR_OFMOUNT/backup/"
TAG_BACKUP_="$DIR_OFMOUNT.backup_$(date +'%Y%m%d').rar"

[ ! -n "$CMD_ENCFS"  ] && echo "$NAME: Installa il pacchetto encfs!"  && exit 1
[ ! -n "$CMD_UMOUNT" ] && echo "$NAME: Installa il pacchetto umount!" && exit 1
[ ! -n "$CMD_FIND"   ] && echo "$NAME: Installa il pacchetto find!"   && exit 1
[ ! -n "$CMD_RAR"    ] && echo "$NAME: Installa il pacchetto rar!"    && exit 1

[ ! -d "$PATH_SOURCE" ] && echo "$NAME: Path di Partenza '$PATH_SOURCE' inesistente..." && exit 1
[ ! -d "$DIR_OFMOUNT" ] && echo "$NAME: Path di Mount '$DIR_OFMOUNT' inesistente..."    && exit 1

mount=false
umount=false
search=false
backup=false
case "$EXEC" in
  h) echo -e "Usage:\n\t$NAME [ m | u | s <search-name> | b ]" ; exit 1 ;;
  m) mount=true  ;;
  u) umount=true ;;
  s) search=true ;;
  b) backup=true ;;
  p) _write "$FILE" ; exit ;; 
  *) "$THIS" h ; [ -n "$EXEC" ] && _error "First parameter \"$EXEC\" non valid!" ; exit 1 ;;
esac
ismount=$(ls "$DIR_OFMOUNT/") ; [ -z "$ismount" ] && ( ! $umount ) && mount=true

 ( $mount  ) && _print 'mount...'  && "$CMD_ENCFS" "$PATH_SOURCE" "$DIR_OFMOUNT"
 ( $umount ) && _print 'umount...' && sudo "$CMD_UMOUNT" "$DIR_OFMOUNT"
#( $search ) && _print 'search...' && "$CMD_FIND" -L "$DIR_OFMOUNT" -type f -iname $* -print0 | xargs -0i bash -c "echo 'FILE=[ {} ]' && cat '{}'"
 ( $search ) && _print 'search...' && "$CMD_FIND" -L "$DIR_OFMOUNT" -type f -iname $* -print0 | xargs -0i bash -c "$THIS p \"{}\""
 ( $backup ) && _print 'backup...' && "$CMD_RAR" a -hp -r "$TAG_BACKUP_" "$DIR_BACKUP_"

exit
